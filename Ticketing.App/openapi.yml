openapi: 3.0.1
info:
  title: 'Ticketing.App, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null'
  version: '1.0'
paths:
  /api/shipments:
    get:
      tags:
        - Shipments
      operationId: Get all shpiments
      parameters:
        - name: trackingNumber
          in: query
          schema:
            type: string
        - name: carrierId
          in: query
          schema:
            $ref: '#/components/schemas/ShipmentCarrier'
      responses:
        '200':
          description: Success
    patch:
      tags:
        - Shipments
      operationId: Update a shipment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateShipmentCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateShipmentCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateShipmentCommand'
      responses:
        '200':
          description: Success
    post:
      tags:
        - Shipments
      operationId: Create a shipment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateShipmentCommand'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateShipmentCommand'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateShipmentCommand'
      responses:
        '200':
          description: Success
  '/api/shipments/{id}':
    get:
      tags:
        - Shipments
      operationId: Get a specific shipment
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Success
  /api/tickets:
    get:
      tags:
        - Tickets
      operationId: Get tickets for current user
      responses:
        '200':
          description: Success
    post:
      tags:
        - Tickets
      operationId: Create a ticket
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTicketRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateTicketRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateTicketRequest'
      responses:
        '200':
          description: Success
  '/api/tickets/{id}':
    patch:
      tags:
        - Tickets
      operationId: Update a ticket
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTicketRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateTicketRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UpdateTicketRequest'
      responses:
        '200':
          description: Success
  /api/users/login:
    post:
      tags:
        - Users
      operationId: 'User login, get token'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Success
components:
  schemas:
    CreateShipmentCommand:
      type: object
      properties:
        trackingNumber:
          type: string
          nullable: true
        status:
          $ref: '#/components/schemas/ShipmentTrackingStatus'
        carrier:
          $ref: '#/components/schemas/ShipmentCarrier'
        shippedAt:
          type: string
          format: date-time
          nullable: true
        arrivedAt:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
    CreateTicketRequest:
      type: object
      properties:
        shpmentId:
          type: string
          format: uuid
          nullable: true
        actionUserId:
          type: string
          format: uuid
          nullable: true
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
      additionalProperties: false
    LoginRequest:
      type: object
      properties:
        email:
          type: string
          nullable: true
        password:
          type: string
          nullable: true
      additionalProperties: false
    ShipmentCarrier:
      enum:
        - 0
        - 1
        - 2
        - 3
      type: integer
      format: int32
    ShipmentTrackingStatus:
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
      type: integer
      format: int32
    TicketStatus:
      enum:
        - 0
        - 1
        - 2
      type: integer
      format: int32
    UpdateShipmentCommand:
      type: object
      properties:
        shipmentId:
          type: string
          format: uuid
        trackingNumber:
          type: string
          nullable: true
        status:
          $ref: '#/components/schemas/ShipmentTrackingStatus'
        carrier:
          $ref: '#/components/schemas/ShipmentCarrier'
      additionalProperties: false
    UpdateTicketRequest:
      type: object
      properties:
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        actionUserId:
          type: string
          format: uuid
          nullable: true
        status:
          $ref: '#/components/schemas/TicketStatus'
      additionalProperties: false
  securitySchemes:
    Bearer:
      type: http
      description: Please enter token
      scheme: bearer
      bearerFormat: JWT
security:
  - Bearer: [ ]